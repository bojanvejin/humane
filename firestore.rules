rules_version = '2';
service cloud.firestore {
  match /databases/{db}/documents {

    function isSignedIn() { return request.auth != null; }
    function isAdmin() { return isSignedIn() && request.auth.token.role == 'admin'; }
    function isArtist(uid) { return isSignedIn() && request.auth.uid == uid && request.auth.token.role == 'artist'; }

    match /tracks/{trackId} {
      allow read: if true;
      allow write: if isAdmin() || (isArtist(request.auth.uid) && request.resource.data.artistId == request.auth.uid);
    }

    match /plays_raw/{id} {
      allow read: if isAdmin();
      allow write: if false; // only via server
    }

    match /plays/{id} {
      allow read: if isSignedIn();
      allow write: if false; // only materializer
    }
    
    // Allow users to read their own user profile
    match /users/{uid} {
      allow read: if isSignedIn() && (request.auth.uid == uid || isAdmin());
      allow write: if isSignedIn() && request.auth.uid == uid;
    }

    // Allow artists to read their own artist profile
    match /artistProfiles/{artistId} {
      allow read: if true; // Publicly readable artist profiles
      allow write: if isArtist(request.auth.uid) && request.resource.data.userId == request.auth.uid;
    }

    // Deny all other writes by default
    match /{document=**} {
      allow read, write: if false;
    }
  }
}